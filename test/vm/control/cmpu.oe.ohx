; The MIT License (MIT)
; Copyright (c) 2023-2024 Fraser Heavy Software
; This test case is part of the Onramp compiler project.

@0x00 =__start
    ; format indicator `~Onr~amp~   `
    7E 4F 6E 72   ; jz 79 29294
    7E 61 6D 70   ; jz 97 28781
    7E 20 20 20   ; jz 32 8224

    ; store process info vector in r9
    70 89 80 00   ; add r9 r0 0



    ; compare 1 to 3
    7D 8A 01 03   ; cmpu ra 1 3
    71 8A 8A FF   ; sub ra ra -1
    7E 8A 03 00   ; jz ra +3

    ; compare failed, exit(-1)
    78 8A 89 08   ; ldw ra r9 8  (exit address)
    70 80 00 01   ; add r0 0 1
    70 8F 8A 00   ; add rip ra 0


    ; compare 3 to 1
    7D 8A 03 01   ; cmpu ra 3 1
    71 8A 8A 01   ; sub ra ra 1
    7E 8A 03 00   ; jz ra +3

    ; compare failed, exit(-1)
    78 8A 89 08   ; ldw ra r9 8  (exit address)
    70 80 00 01   ; add r0 0 1
    70 8F 8A 00   ; add rip ra 0


    ; compare 3 to 3
    7D 8A 03 03   ; cmpu ra 3 3
    7E 8A 03 00   ; jz ra +3

    ; compare failed, exit(-1)
    78 8A 89 08   ; ldw ra r9 8  (exit address)
    70 80 00 01   ; add r0 0 1
    70 8F 8A 00   ; add rip ra 0



    ; compare 3 to -3  (comparison is unsigned, 3 < 0xFFFFFFFD)
    7D 8A 03 FD   ; cmpu ra 3 -3
    71 8A 8A FF   ; sub ra ra -1
    7E 8A 03 00   ; jz ra +3

    ; compare failed, exit(-1)
    78 8A 89 08   ; ldw ra r9 8  (exit address)
    70 80 00 01   ; add r0 0 1
    70 8F 8A 00   ; add rip ra 0



    ; compare -3 to 3  (comparison is unsigned, 0xFFFFFFFD > 3)
    7D 8A FD 03   ; cmpu ra -3 3
    71 8A 8A 01   ; sub ra ra 1
    7E 8A 03 00   ; jz ra +3

    ; compare failed, exit(-1)
    78 8A 89 08   ; ldw ra r9 8  (exit address)
    70 80 00 01   ; add r0 0 1
    70 8F 8A 00   ; add rip ra 0



    ; compare -3 to -3
    7D 8A FD FD   ; cmpu ra -3 -3
    7E 8A 03 00   ; jz ra +3

    ; compare failed, exit(-1)
    78 8A 89 08   ; ldw ra r9 8  (exit address)
    70 80 00 01   ; add r0 0 1
    70 8F 8A 00   ; add rip ra 0


    ; exit(0)
    78 8A 89 08   ; ldw ra r9 8  (exit address)
    70 80 00 00   ; add r0 0 0        ; set exit parameter to 0 (success)
    70 8F 8A 00   ; add rip ra 0      ; jump to exit address
