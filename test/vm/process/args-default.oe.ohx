; The MIT License (MIT)
; Copyright (c) 2023-2024 Fraser Heavy Software
; This test case is part of the Onramp compiler project.

; format indicator `~Onr~amp~   `
7E 4F 6E 72   ; jz 79 29294
7E 61 6D 70   ; jz 97 28781
7E 20 20 20   ; jz 32 8224

; move process info table to r9
70 89 00 80   ; add r9 0 r0

; put 1 into r0 now, we'll exit if an error occurs
70 80 00 01   ; add r0 0 1

; get argv into r1
78 81 89 18   ; ldw r1 r9 24

; check that argv[0] is non-null
78 8A 81 00   ; ldw ra r1 0
7E 8A 01 00   ; jz ra 1 0
7E 00 01 00   ; jz 0 1
78 8F 89 08   ; ldw rip r9 8   ; error, exit(1)

; check that argv[1] is null
78 8A 81 04   ; ldw ra r1 4
7E 8A 01 00   ; jz ra 1 0
78 8F 89 08   ; ldw rip r9 8   ; error, exit(1)

; the test harness puts the program in a temporary file so we can't really test
; what its name is. we just check that it's a non-empty null-terminated string.

; load argv[0] into r2
78 82 81 00   ; ldw r2 r1 0

; check that argv[0][0] is non-null
7A 8A 82 00   ; ldb ra r2 0
7E 8A 01 00   ; jz ra 1
7E 00 01 00   ; jz 0 1
78 8F 89 08   ; ldw rip r9 8   ; error, exit(1)

; walk argv[0] until we find a null
70 83 00 01   ; add r3 0 1
7A 8A 82 83   ; ldb ra r2 r3
7E 8A 02 00   ; jz ra 2
70 83 83 01   ; add r3 r3 1   ; inc r3
7E 00 FC FF   ; jz 0 -4

; success. exit 0
70 80 00 00   ; add r0 0 0
78 8F 89 08   ; ldw rip r9 8  (exit address)
